{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderjarabik/Desktop/flat-project/src/App.js\";\nimport React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport Flat from './flat';\nimport Marker from './marker';\nimport './app.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectFlat = flat => {\n      console.log(flat);\n      this.setState({\n        selectedFlat: flat\n      });\n    };\n\n    this.handleSearch = event => {\n      this.setState({\n        search: event.value\n      });\n    };\n\n    this.state = {\n      flats: [],\n      selectedFlat: null,\n      search: ''\n    };\n  }\n\n  componentDidMount() {\n    const url = \"https://raw.githubusercontent.com/lewagon/flats-boilerplate/master/flats.json\";\n    fetch(url).then(response => response.json()).then(data => {\n      this.setState({\n        flats: data\n      });\n    });\n  }\n\n  render() {\n    let center = {\n      lat: 48.8566,\n      lng: 2.3522\n    };\n\n    if (this.state.selectedFlat) {\n      center = {\n        lat: this.state.selectedFlat.lat,\n        lng: this.state.selectedFlat.lng\n      };\n    }\n\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      value: this.state.search,\n      onChange: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"flats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.flats.map(flat => {\n      return React.createElement(Flat, {\n        flat: flat,\n        key: flat.name,\n        selectFlat: this.selectFlat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    }))), React.createElement(\"div\", {\n      className: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(GoogleMapReact, {\n      center: center,\n      zoom: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.flats.map(flat => {\n      return React.createElement(Marker, {\n        key: flat.name,\n        lat: flat.lat,\n        lng: flat.lng,\n        text: flat.price,\n        selected: flat === this.state.selectedFlat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexanderjarabik/Desktop/flat-project/src/App.js"],"names":["React","Component","GoogleMapReact","Flat","Marker","App","constructor","props","selectFlat","flat","console","log","setState","selectedFlat","handleSearch","event","search","value","state","flats","componentDidMount","url","fetch","then","response","json","data","render","center","lat","lng","map","name","price"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport Flat from './flat';\nimport Marker from './marker';\nimport './app.css';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            flats: [],\n            selectedFlat: null,\n            search: ''\n        };\n    }\n\n    componentDidMount() {\n        const url = \"https://raw.githubusercontent.com/lewagon/flats-boilerplate/master/flats.json\";\n        fetch(url)\n            .then(response => response.json())\n            .then((data) => {\n                this.setState({ flats: data, })\n            })\n    };\n\n    selectFlat = (flat) => {\n        console.log(flat);\n        this.setState({\n            selectedFlat: flat\n        })\n    }\n\n    handleSearch = (event) => {\n        this.setState({\n            search: event.value\n        })\n    }\n\n\n    render() {\n\n        let center = {\n            lat: 48.8566,\n            lng: 2.3522\n        }\n\n        if (this.state.selectedFlat) {\n            center = {\n                lat: this.state.selectedFlat.lat,\n                lng: this.state.selectedFlat.lng\n            }\n        }\n\n\n        return (\n\n            <div className=\"app\">\n                < div className=\"main\">\n                    <div className=\"search\">\n                        <input type=\"text\"\n                            placeholder=\"Search...\"\n                            value={this.state.search}\n                            onChange={this.handleSearch}\n                        />\n                    </div>\n                    <div className=\"flats\">\n                        {this.state.flats.map((flat) => {\n                            return <Flat flat={flat} key={flat.name}\n                                selectFlat={this.selectFlat} />\n                        })}\n                    </div>\n                </div>\n                <div className=\"map\">\n                    <GoogleMapReact\n                        center={center}\n                        zoom={14}\n                    >\n                        {this.state.flats.map((flat) => {\n                            return <Marker key={flat.name} lat={flat.lat} lng={flat.lng}\n                                text={flat.price} selected={flat === this.state.selectedFlat} />\n                        })}\n                    </GoogleMapReact>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}